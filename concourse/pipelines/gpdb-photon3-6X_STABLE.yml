## ######################################################################
##            ___   ___    _  _  ___ _____   ___ ___ ___ _____
##           |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _|
##           | |) | (_) | | .` | (_) || |   | _|| |) | |  | |
##           |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|
##            _____ _  _ ___ ___   ___ ___ _    ___ _
##           |_   _| || |_ _/ __| | __|_ _| |  | __| |
##             | | | __ || |\__ \ | _| | || |__| _||_|
##             |_| |_||_|___|___/ |_| |___|____|___(_)
##
## This is a generated file. Please edit the corresponding template
## file (example: templates/gpdb-tpl.yml) and regenerate the pipeline
## using appropriate tool (example: gen_pipeline.py -t prod).
## ----------------------------------------------------------------------
## Generated by gen_pipeline.py at: 2021-01-07 18:25:42.827563
## Template file: gpdb-tpl.yml
## OS Types: ['centos6', 'centos7', 'ubuntu18.04', 'photon3']
## Test Sections: ['ICW', 'Replication', 'ResourceGroups', 'Interconnect', 'CLI', 'UD', 'AA', 'Extensions', 'Gpperfmon']
## ======================================================================

## ======================================================================
##                   _
##   __ _ _ __   ___| |__   ___  _ __ ___
##  / _` | '_ \ / __| '_ \ / _ \| '__/ __|
## | (_| | | | | (__| | | | (_) | |  \__ \
##  \__,_|_| |_|\___|_| |_|\___/|_|  |___/
## ======================================================================
## NOTE: only one anchors section is allowed per file, so we define this
##  at the top of the file so anchors are usable as early as possible.
anchors:
- &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/google/

- &ccp_default_vars
  instance_type: n1-standard-1
  PLATFORM: centos6

- &destroy_common
  action: destroy
  terraform_source: ccp_src/google/
  vars:
    aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
    aws_ebs_volume_type: standard

- &ccp_destroy
  put: terraform
  params:
    <<: *destroy_common
    env_name_file: terraform/name
  get_params:
    action: destroy

- &ccp_destroy_two_clusters
  in_parallel:
    - put: terraform_1
      params:
        <<: *destroy_common
        env_name_file: terraform_1/name
      get_params:
        action: destroy
    - put: terraform_2
      params:
        <<: *destroy_common
        env_name_file: terraform_2/name
      get_params:
        action: destroy

- &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
  AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
  AWS_DEFAULT_REGION: ((aws-region))
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: ((tf-bucket-name))
  CLOUD_PROVIDER: google

- &set_failed
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: pivotaldata/ccp
            tag: "7"
        inputs:
          - name: ccp_src
          - name: terraform
        run:
          path: 'ccp_src/google/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((google-service-account-key))
          GOOGLE_PROJECT_ID: ((google-project-id))
          GOOGLE_ZONE: ((google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((tf-machine-region))
          BUCKET_PATH: clusters-google/
          BUCKET_NAME: ((tf-bucket-name))

- &set_failed_two_clusters_common
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: pivotaldata/ccp
      tag: "7"
  run:
    path: 'ccp_src/google/ccp_failed_test.sh'
  params:
    GOOGLE_CREDENTIALS: ((google-service-account-key))
    GOOGLE_PROJECT_ID: ((google-project-id))
    GOOGLE_ZONE: ((google-zone))
    GOOGLE_SERVICE_ACCOUNT: ((google-service-account))
    AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
    AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
    AWS_DEFAULT_REGION: ((tf-machine-region))
    BUCKET_PATH: clusters-google/
    BUCKET_NAME: ((tf-bucket-name))

- &terraform_cluster
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((google-service-account-key))
    vars:
      project_id: ((google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((aws-region))
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/

- &set_failed_two_clusters
  in_parallel:
    - task: on_failure_set_failed-1
      config:
        <<: *set_failed_two_clusters_common
        inputs:
          - name: ccp_src
          - name: terraform_1
    - task: on_failure_set_failed-2
      config:
        <<: *set_failed_two_clusters_common
        inputs:
          - name: ccp_src
          - name: terraform_2

## ======================================================================
##   __ _ _ __ ___  _   _ _ __  ___
##  / _` | '__/ _ \| | | | '_ \/ __|
## | (_| | | | (_) | |_| | |_) \__ \
##  \__, |_|  \___/ \__,_| .__/|___/
##  |___/                |_|
## ======================================================================

groups:
- name: all
  jobs:
  - check_format
  - compile_gpdb_photon3
  ## --------------------------------------------------------------------
  - icw_gporca_photon3
  - icw_planner_photon3
  - icw_gporca_icproxy_photon3
  - icw_planner_icproxy_photon3
  ## --------------------------------------------------------------------
  ## --------------------------------------------------------------------
  - gate_resource_groups_start
  - resource_group_photon3
  ## --------------------------------------------------------------------
  ## --------------------------------------------------------------------
  - gate_cli_start
  - gpmovemirrors_photon3
  - gppkg_photon3
  - analyzedb_photon3
  - gpreload_photon3
  - gpinitsystem_photon3
  - gpstate_photon3
  - replication_slots_photon3
  - gpactivatestandby_photon3
  - gpinitstandby_photon3
  - gpcheckcat_photon3
  - gprecoverseg_photon3
  - gpaddmirrors_photon3
  - gpconfig_photon3
  - gpssh-exkeys_photon3
  - gpstart_photon3
  - gpstop_photon3
  - check_photon
  ## --------------------------------------------------------------------
 ## ---------------------------------------------------------------------
  - icw_extensions_gpcloud_photon3


## ======================================================================

- name: Compile
  jobs:
  - compile_gpdb_photon3

## ======================================================================

- name: ICW
  jobs:
  - icw_gporca_photon3
  - icw_planner_photon3
  - icw_gporca_icproxy_photon3
  - icw_planner_icproxy_photon3


## ======================================================================

- name: Extensions
  jobs:
  - icw_extensions_gpcloud_photon3

## ======================================================================
- name: Interconnect
  jobs:
  - compile_gpdb_photon3
  - interconnect_photon3

## ======================================================================

- name: ResourceGroups
  jobs:
  - gate_resource_groups_start
  - resource_group_photon3
  - compile_gpdb_photon3

## ======================================================================


## ======================================================================

- name: CLI
  jobs:
  - gate_cli_start
  - gpmovemirrors_photon3
  - gppkg_photon3
  - analyzedb_photon3
  - gpreload_photon3
  - gpinitsystem_photon3
  - gpstate_photon3
  - replication_slots_photon3
  - gpactivatestandby_photon3
  - gpinitstandby_photon3
  - gpcheckcat_photon3
  - gprecoverseg_photon3
  - gpaddmirrors_photon3
  - gpconfig_photon3
  - gpssh-exkeys_photon3
  - gpstart_photon3
  - gpstop_photon3
  - check_photon
  - compile_gpdb_photon3

## ======================================================================
##                                           _
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  | |_ _   _ _ __   ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \ | __| | | | '_ \ / _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/ | |_| |_| | |_) |  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___|  \__|\__, | .__/ \___||___/
##                                               |___/|_|
## ======================================================================

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.11.14
- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource
- name: pivnet
  type: registry-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
## ======================================================================
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___||___/
## ======================================================================

resources:
- name: clang_toolchain
  type: registry-image
  source:
    repository: gcr.io/data-orca/clang-toolchain
- name: ccp_src
  type: git
  source:
    branch: ((ccp-git-branch))
    private_key: ((ccp-git-key))
    uri: ((ccp-git-remote))

- name: terraform
  <<: *terraform_cluster

- name: gpdb_src
  type: git
  source:
    branch: ((gpdb-git-branch))
    uri: ((gpdb-git-remote))
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: libquicklz-photon3
  type: gcs
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: gp-internal-artifacts/photon3/libquicklz-(1\.5\.0-.*)-1.x86_64.rpm

- name: libquicklz-devel-photon3
  type: gcs
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: gp-internal-artifacts/photon3/libquicklz-devel-(1\.5\.0-.*)-1.x86_64.rpm
- name: python-photon3
  type: gcs
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: gp-internal-artifacts/photon3/python-(2\.7\.12\+.*).tar.gz
 
- name: gpdb6-photon3-build
  type: registry-image
  source: 
    repository: pivotaldata/gpdb6-photon3-build
    tag: latest
- name: gpdb6-photon3-test
  type: registry-image
  source: 
    repository: pivotaldata/gpdb6-photon3-test
    tag: latest

- name: bin_gpdb_photon3
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/bin_gpdb_photon3/bin_gpdb.tar.gz

- name: bin_gpdb_clients_photon3
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/bin_gpdb_clients_photon3/bin_gpdb_clients.tar.gz

## ======================================================================
##    _       _
##   (_) ___ | |__  ___
##   | |/ _ \| '_ \/ __|
##   | | (_) | |_) \__ \
##  _/ |\___/|_.__/|___/
## |__/
## ======================================================================

jobs:

## ======================================================================
##  ____  _            _ _              _   _       _ _     _____         _
## |  _ \(_)_ __   ___| (_)_ __   ___  | | | |_ __ (_) |_  |_   _|__  ___| |_ ___
## | |_) | | '_ \ / _ \ | | '_ \ / _ \ | | | | '_ \| | __|   | |/ _ \/ __| __/ __|
## |  __/| | |_) |  __/ | | | | |  __/ | |_| | | | | | |_    | |  __/\__ \ |_\__ \
## |_|   |_| .__/ \___|_|_|_| |_|\___|  \___/|_| |_|_|\__|   |_|\___||___/\__|___/
##         |_|
## ======================================================================

- name: check_format
  plan:
    - in_parallel:
      - get: gpdb_src
        trigger: true
      - get: clang_toolchain
    - task: check_format
      image: clang_toolchain
      file: gpdb_src/concourse/tasks/check_format.yml

## ======================================================================
##   ____                      _ _
##  / ___|___  _ __ ___  _ __ (_) | ___
## | |   / _ \| '_ ` _ \| '_ \| | |/ _ \
## | |__| (_) | | | | | | |_) | | |  __/
##  \____\___/|_| |_| |_| .__/|_|_|\___|
##                      |_|
## ======================================================================
- name: compile_gpdb_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed:
          - check_format
        trigger: ((gpdb_src-trigger-flag))
      - get: gpdb6-photon3-build
      - get: libquicklz-installer
        resource: libquicklz-photon3
      - get: libquicklz-devel-installer
        resource: libquicklz-devel-photon3
      - get: python-tarball
        resource: python-photon3
  - task: compile_gpdb
    image: gpdb6-photon3-build
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    params:
      CONFIGURE_FLAGS: ((configure_flags_with_extensions))
      TARGET_OS: photon
      TARGET_OS_VERSION: 3
      BLD_TARGETS: "clients"
      RC_BUILD_TYPE_GCS: ((rc-build-type-gcs))
  - in_parallel:
      steps:
      - put: bin_gpdb_photon3
        params:
          file: gpdb_artifacts/bin_gpdb.tar.gz
      - put: bin_gpdb_clients_photon3
        params:
          file: gpdb_artifacts/gpdb-clients-photon3.tar.gz


## ======================================================================
##  ___ ______        __
## |_ _/ ___\ \      / /
##  | | |    \ \ /\ / /
##  | | |___  \ V  V /
## |___\____|  \_/\_/
## ======================================================================

- name: icw_gporca_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: bin_gpdb
        resource: bin_gpdb_photon3
        passed: [compile_gpdb_photon3]
        trigger: true
      - get: gpdb6-photon3-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb6-photon3-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=on' installcheck-world
      TEST_OS: photon
      CONFIGURE_FLAGS: ((configure_flags))

- name: icw_planner_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: bin_gpdb
        passed: [compile_gpdb_photon3]
        resource: bin_gpdb_photon3
        trigger: true
      - get: gpdb6-photon3-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb6-photon3-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=off' installcheck-world
      TEST_OS: photon
      CONFIGURE_FLAGS: ((configure_flags))

- name: icw_gporca_icproxy_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: bin_gpdb
        resource: bin_gpdb_photon3
        passed: [compile_gpdb_photon3]
        trigger: true
      - get: gpdb6-photon3-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb6-photon3-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=proxy -c optimizer=on' installcheck-world
      TEST_OS: photon
      CONFIGURE_FLAGS: ((configure_flags))

- name: icw_planner_icproxy_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: bin_gpdb
        passed: [compile_gpdb_photon3]
        resource: bin_gpdb_photon3
        trigger: true
      - get: gpdb6-photon3-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb6-photon3-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=proxy -c optimizer=off' installcheck-world
      TEST_OS: photon
      CONFIGURE_FLAGS: ((configure_flags))

## ======================================================================
##  ___ _   _ _____ _____ ____   ____ ___  _   _ _   _ _____ ____ _____
## |_ _| \ | |_   _| ____|  _ \ / ___/ _ \| \ | | \ | | ____/ ___|_   _|
##  | ||  \| | | | |  _| | |_) | |  | | | |  \| |  \| |  _|| |     | |
##  | || |\  | | | | |___|  _ <| |__| |_| | |\  | |\  | |__| |___  | |
## |___|_| \_| |_| |_____|_| \_\\____\___/|_| \_|_| \_|_____\____| |_|
## ======================================================================
- name: interconnect_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: bin_gpdb
        passed: [compile_gpdb_photon3]
        resource: bin_gpdb_photon3
        trigger: true
      - get: gpdb6-photon3-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb6-photon3-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=off'
        BUILD_TYPE=((rc-build-type)) -C src/test/regress installcheck-icudp
      TEST_OS: photon
## ======================================================================
##  ____                                     ____
## |  _ \ ___  ___  ___  _   _ _ __ ___ ___ / ___|_ __ ___  _   _ _ __  ___
## | |_) / _ \/ __|/ _ \| | | | '__/ __/ _ \ |  _| '__/ _ \| | | | '_ \/ __|
## |  _ <  __/\__ \ (_) | |_| | | | (_|  __/ |_| | | | (_) | |_| | |_) \__ \
## |_| \_\___||___/\___/ \__,_|_|  \___\___|\____|_|  \___/ \__,_| .__/|___/
##                                                               |_|
## ======================================================================

- name: gate_resource_groups_start
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
      - get: bin_gpdb_photon3
        passed:
        - compile_gpdb_photon3

- name: resource_group_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: gpdb_binary
        resource: bin_gpdb_photon3
        passed: [compile_gpdb_photon3]
        trigger: true
      - get: ccp_src
      - get: gpdb6-photon3-test
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: photon3
        instance_type: n1-standard-2
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: photon3
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    file: gpdb_src/concourse/tasks/ic_gpdb_resgroup.yml
    image: gpdb6-photon3-test
    params:
      TEST_OS: photon
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed


## ======================================================================
##                               __
##   __ _ _ __  _ __   ___ _ __ / _|_ __ ___   ___  _ __
##  / _` | '_ \| '_ \ / _ \ '__| |_| '_ ` _ \ / _ \| '_ \
## | (_| | |_) | |_) |  __/ |  |  _| | | | | | (_) | | | |
##  \__, | .__/| .__/ \___|_|  |_| |_| |_| |_|\___/|_| |_|
##  |___/|_|   |_|
## ======================================================================

## ======================================================================
##   ____ _     ___
##  / ___| |   |_ _|
## | |   | |    | |
## | |___| |___ | |
##  \____|_____|___|
## ======================================================================

- name: gate_cli_start
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed:
        - compile_gpdb_photon3
        trigger: true
      - get: bin_gpdb_photon3
        passed:
        - compile_gpdb_photon3

- name: check_photon
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
      - get: bin_gpdb
        resource: bin_gpdb_photon3
        passed: [compile_gpdb_photon3]
        trigger: true
      - get: gpdb6-photon3-test
  - task: check_photon
    file: gpdb_src/concourse/tasks/gpMgmt_check_gpdb.yml
    image: gpdb6-photon3-test
    params:
      TEST_OS: photon

- name: gpmovemirrors_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                number_of_nodes: 4
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpmovemirrors_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpmovemirrors --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpmovemirrors_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpmovemirrors --tags=~concourse_cluster,demo_cluster

- name: gppkg_photon3
  plan:
   - in_parallel:
       steps:
       - get: gpdb_src
         params:
           submodules:
             - gpMgmt/bin/pythonSrc/ext
         passed: [compile_gpdb_photon3]
       - get: gpdb6-photon3-test
   - in_parallel:
       steps:
       - do:
         - get: gpdb_binary
           resource: bin_gpdb_photon3
           passed: [compile_gpdb_photon3]
           trigger: true
         - get: ccp_src
         - put: terraform
           params:
             <<: *ccp_default_params
             vars:
               <<: *ccp_default_vars
               instance_type: n1-standard-2
               
         - task: gen_cluster
           file: ccp_src/ci/tasks/gen_cluster.yml
           params:
             <<: *ccp_gen_cluster_default_params
         - task: gpinitsystem
           file: ccp_src/ci/tasks/gpinitsystem.yml
         - task: gppkg_concourse_cluster_tests
           file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
           image: gpdb6-photon3-test
           params:
             BEHAVE_FLAGS: --tags=gppkg --tags=concourse_cluster
             
           on_success:
             <<: *ccp_destroy
           ensure:
             <<: *set_failed
       - do:
         - get: bin_gpdb
           resource: bin_gpdb_photon3
           passed: [compile_gpdb_photon3]
           trigger: true
         - task: gppkg_demo_cluster_tests
           file: gpdb_src/concourse/tasks/behave_gpdb.yml
           image: gpdb6-photon3-test
           params:
             BEHAVE_FLAGS: --tags=gppkg --tags=~concourse_cluster,demo_cluster

- name: analyzedb_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: analyzedb_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=analyzedb --tags=~concourse_cluster,demo_cluster
- name: gpreload_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpreload_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpreload --tags=~concourse_cluster,demo_cluster
 
- name: gpinitsystem_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpinitsystem_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpinitsystem --tags=~concourse_cluster,demo_cluster
  
- name: gpstate_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpstate_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpstate --tags=~concourse_cluster,demo_cluster
 
- name: replication_slots_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: replication_slots_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=replication_slots --tags=~concourse_cluster,demo_cluster
 
- name: gpactivatestandby_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpactivatestandby_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpactivatestandby --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpactivatestandby_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpactivatestandby --tags=~concourse_cluster,demo_cluster
 
- name: gpinitstandby_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpinitstandby_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpinitstandby --tags=~concourse_cluster,demo_cluster
 
- name: gpcheckcat_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpcheckcat_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpcheckcat --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpcheckcat_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpcheckcat --tags=~concourse_cluster,demo_cluster
  
- name: gprecoverseg_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gprecoverseg_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gprecoverseg --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gprecoverseg_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gprecoverseg --tags=~concourse_cluster,demo_cluster
- name: gpaddmirrors_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                number_of_nodes: 4
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpaddmirrors_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpaddmirrors --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpaddmirrors_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpaddmirrors --tags=~concourse_cluster,demo_cluster
  
- name: gpconfig_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpconfig_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpconfig --tags=concourse_cluster
              LC_CTYPE: en_US.UTF-8
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpconfig_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpconfig --tags=~concourse_cluster,demo_cluster
              LC_CTYPE: en_US.UTF-8

- name: gpssh-exkeys_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                number_of_nodes: 4
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpssh-exkeys_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpssh-exkeys --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpssh-exkeys_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpssh-exkeys --tags=~concourse_cluster,demo_cluster
  
- name: gpstart_photon3
  plan:
   - in_parallel:
       steps:
       - get: gpdb_src
         params:
           submodules:
             - gpMgmt/bin/pythonSrc/ext
         passed: [compile_gpdb_photon3]
       - get: gpdb6-photon3-test
   - in_parallel:
       steps:
       - do:
         - get: gpdb_binary
           resource: bin_gpdb_photon3
           passed: [compile_gpdb_photon3]
           trigger: true
         - get: ccp_src
         - put: terraform
           params:
             <<: *ccp_default_params
             vars:
               <<: *ccp_default_vars
               instance_type: n1-standard-2
               
         - task: gen_cluster
           file: ccp_src/ci/tasks/gen_cluster.yml
           params:
             <<: *ccp_gen_cluster_default_params
         - task: gpinitsystem
           file: ccp_src/ci/tasks/gpinitsystem.yml
         - task: gpstart_concourse_cluster_tests
           file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
           image: gpdb6-photon3-test
           params:
             BEHAVE_FLAGS: --tags=gpstart --tags=concourse_cluster
             
           on_success:
             <<: *ccp_destroy
           ensure:
             <<: *set_failed
       - do:
         - get: bin_gpdb
           resource: bin_gpdb_photon3
           passed: [compile_gpdb_photon3]
           trigger: true
         - task: gpstart_demo_cluster_tests
           file: gpdb_src/concourse/tasks/behave_gpdb.yml
           image: gpdb6-photon3-test
           params:
             BEHAVE_FLAGS: --tags=gpstart --tags=~concourse_cluster,demo_cluster
  
- name: gpstop_photon3
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          params:
            submodules:
              - gpMgmt/bin/pythonSrc/ext
          passed: [compile_gpdb_photon3]
        - get: gpdb6-photon3-test
    - in_parallel:
        steps:
        - do:
          - get: gpdb_binary
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - get: ccp_src
          - put: terraform
            params:
              <<: *ccp_default_params
              vars:
                <<: *ccp_default_vars
                instance_type: n1-standard-2
                
          - task: gen_cluster
            file: ccp_src/ci/tasks/gen_cluster.yml
            params:
              <<: *ccp_gen_cluster_default_params
          - task: gpinitsystem
            file: ccp_src/ci/tasks/gpinitsystem.yml
          - task: gpstop_concourse_cluster_tests
            file: gpdb_src/concourse/tasks/run_behave_on_ccp_cluster.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpstop --tags=concourse_cluster
              
            on_success:
              <<: *ccp_destroy
            ensure:
              <<: *set_failed
        - do:
          - get: bin_gpdb
            resource: bin_gpdb_photon3
            passed: [compile_gpdb_photon3]
            trigger: true
          - task: gpstop_demo_cluster_tests
            file: gpdb_src/concourse/tasks/behave_gpdb.yml
            image: gpdb6-photon3-test
            params:
              BEHAVE_FLAGS: --tags=gpstop --tags=~concourse_cluster,demo_cluster
              
- name: icw_extensions_gpcloud_photon3
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_photon3]
        trigger: true
      - get: bin_gpdb_photon3
        passed: [compile_gpdb_photon3]
      - get: gpdb6-photon3-test
  - in_parallel:
      steps:
      - task: unit_tests_gpcloud
        file: gpdb_src/concourse/tasks/unit_tests_gpcloud_photon3.yml
        image: gpdb6-photon3-test
        params:
          TARGET_OS: photon
      - task: regression_tests_gpcloud_photon
        input_mapping:
          bin_gpdb: bin_gpdb_photon3
        file: gpdb_src/concourse/tasks/regression_tests_gpcloud_photon3.yml
        image: gpdb6-photon3-test
        params:
          gpcloud_access_key_id: ((gpcloud-access-key-id))
          gpcloud_secret_access_key: ((gpcloud-secret-access-key))
          TARGET_OS: photon
      - task: gpcheckcloud_tests_gpcloud_photon
        input_mapping:
          bin_gpdb: bin_gpdb_photon3
        file: gpdb_src/concourse/tasks/gpcheckcloud_tests_gpcloud_photon3.yml
        image: gpdb6-photon3-test
        params:
          gpcloud_access_key_id: ((gpcloud-access-key-id))
          gpcloud_secret_access_key: ((gpcloud-secret-access-key))
          TARGET_OS: photon
